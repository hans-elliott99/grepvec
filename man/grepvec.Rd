% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grepvec.R
\name{grepvec}
\alias{grepvec}
\title{Search for matches between a vector of patterns and a vector of strings.}
\usage{
grepvec(
  needles,
  haystacks,
  fixed = FALSE,
  ignore_case = FALSE,
  value = FALSE,
  names = FALSE,
  keepdim = FALSE,
  match = c("all", "first")
)
}
\arguments{
\item{needles}{A character vector of expressions which will be searched for
in \verb{haystacks`` as fixed strings or regular expressions, depending on the }fixed` argument.}

\item{haystacks}{A character vector of strings which will be searched over
for matches in \code{needles}.}

\item{fixed}{A logical(1), default \code{FALSE}. If \code{TRUE}, each string in
needles is treated as as an exact string to find. If \code{FALSE}, needles are
treated as regular expressions.}

\item{ignore_case}{A logical(1), default \code{FALSE}. If \code{TRUE}, the pattern
matching will be case-insensitive. Ignored if \code{fixed = TRUE}.}

\item{value}{A logical(1), default \code{FALSE}. If \code{TRUE}, actual strings from
\code{haystacks} are returned instead of indices. Otherwise, integer indices are
returned.}

\item{match}{A character(1), default "all". If "first", the first match
found in needles is returned for each string in haystack. This may improve
performance for large needle vectors since the search process for each
string can stop as soon as a match is found.
If "all", a vector is returned containing the indices of all found matches
in \code{needles}.}
}
\value{
A list of integer or character vectors, with length
\code{length(needles)}.
}
\description{
\code{grepvec} searches for needles in haystacks. Needles are one or more
regular expression or fixed strings, and haystacks are one or more strings to
search over. It is like calling \code{lapply(needles, grep, x = haystacks)}
(see \verb{[grep]}).
The strings in the needles vector are compiled as regular expressions, unless
\code{fixed = TRUE}.
grepvec can return one or all matches based on the \code{matchrule} argument.
By default, a list of length(needles) is returned, containing
at each index an integer vector with the indices of haystacks that were
successfully matched.
}
\examples{
grepvec(needles = c("some", "other", "string"),
        haystacks = c("some string 1", "another string"),
        fixed = TRUE)
grepvec(c("^h", ".ell.", "ello$"), c("hello", "jelly"))
grepvec(c("^h", ".ell.", "ello$"), c("hello", "jelly"),
        value = TRUE)
grepvec(c("one", "possib", "many"),
        c("Some text which might possibly contain one of many keywords",
          "Another string without many words",
          "A third impossibly boring string",
          "Done"),
        match = "first",
        value = TRUE)
grepvec("a[bc]", c("app", "ABBA", "accolade"), ignore_case = TRUE)

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grepvec.R
\name{by_ndl}
\alias{by_ndl}
\alias{by_ndl.grepvec}
\title{For each needle pattern, get the haystack strings where a match was found.}
\usage{
by_ndl(x, value = FALSE, ...)

\method{by_ndl}{grepvec}(
  x,
  value = FALSE,
  haystacks = x$haystacks,
  n_ndl = length(x$needles),
  ...
)
}
\arguments{
\item{x}{\code{grepvec} object returned from \link{grepvec} when out = "object".}

\item{value}{A logical(0), default FALSE. If FALSE, then at each list index
is a vector containing the integer indices of the haystacks that matched to
the given needle. If TRUE, the actual matched haystack strings are used.}

\item{...}{Additional arguments to be passed to methods.}

\item{haystacks}{Character vector containing the haystack strings that were
searched over by grepvec. By default, the haystacks used in the \link{grepvec}
call are used.}

\item{n_ndl}{The length of the character vector containing the needle
patterns that were searched for in the haystacks by grepvec.
By default, the length of the needles used in the \link{grepvec} call are used.}
}
\value{
List of length(needles) of integer or character vectors. Each list
index corresponds to the needle pattern at that index, and the list
elements are the indices or actual strings from haystacks which matched to
the given needle.
The list element will be a vector of length 0 (integer(0) or character(0))
if no haystack matches were found for the needle.
}
\description{
Get the results of \link{grepvec} as a list, length(needles), containing the
indices or values of matched haystacks.
Applying this function to a \code{grepvec} object is equivalent to calling
\link{grepvec} with \code{out = "haystacks"}.
}
